plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.flywaydb.flyway' version '9.0.2'
    id 'jacoco'
    //  id 'checkstyle' // uncomment to run checkstyle
}

group = 'com.humegatech'
version = '0.0.1-SNAPSHOT'
// sourceCompatibility = '17' // took out to avoid Heroku deployment issues

bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: 'local'
}

repositories {
    mavenCentral()
}

gradleEnterprise {
    buildScan {
        // Connecting to scans.gradle.com by agreeing to the terms of service
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
        publishAlways()
    }
}

dependencies {
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.13'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.security:spring-security-test'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

    annotationProcessor 'org.projectlombok:lombok'

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'io.github.bonigarcia:webdrivermanager:5.3.1'
    testImplementation 'org.jsoup:jsoup:1.15.3'
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.6.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run

    // used to exclude Selenium tests in CI since changes aren't deployed yet
    if (project.hasProperty('excludeTests')) {
        exclude project.property('excludeTests')
    }
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/mpls-food'
    user = 'postgres'
    password = ''
    schemas = ['public']
    cleanDisabled = false
}
